services:
  # ==========================================
  # Database Initialization Service
  # Creates database if not exists, then exits
  # ==========================================
  db-init:
    profiles: ["dev", "prod"]
    image: postgres:16
    environment:
      - PGUSER=${DB_USER:-}
      - PGPASSWORD=${DB_PASSWORD:-}
      - PGHOST=${DB_HOST:-}
      - PGPORT=${DB_PORT:-}
      - DB_NAME=${DB_NAME:-}
    networks:
      - genfity-wuzapi_wuzapi-network
    command: >
      bash -c "
        echo 'Checking if database ${DB_NAME} exists...'
        if psql -h ${DB_HOST} -U ${DB_USER} -lqt | cut -d \\| -f 1 | grep -qw ${DB_NAME}; then
          echo 'Database ${DB_NAME} already exists'
        else
          echo 'Creating database ${DB_NAME}...'
          createdb -h ${DB_HOST} -U ${DB_USER} ${DB_NAME}
          echo 'Database ${DB_NAME} created successfully'
        fi
        echo 'Database initialization completed'
      "
    restart: "no"

  # ==========================================
  # Application Service (available in dev + prod)
  # ==========================================
  genfity-event-api:
    profiles: ["dev", "prod"]
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${PORT:-8070}:${PORT:-8070}"
    environment:
      # Core config
      - DB_HOST=${DB_HOST:-}
      - DB_PORT=${DB_PORT:-}
      - DB_USER=${DB_USER:-}
      - DB_PASSWORD=${DB_PASSWORD:-}
      - DB_NAME=${DB_NAME:-}
      - DB_SSLMODE=${DB_SSLMODE:-}
      - PORT=${PORT:-}
      - GIN_MODE=${GIN_MODE:-}
      - WEBHOOK_VERIFY_TOKEN=${WEBHOOK_VERIFY_TOKEN:-}
      - TZ=${TZ:-Asia/Jakarta}
      # Domain & SSL (only used when prod profile with nginx-proxy + acme-companion)
      - VIRTUAL_HOST=${GENFITY_DOMAIN:-}
      - LETSENCRYPT_HOST=${GENFITY_DOMAIN:-}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL:-}
    depends_on:
      db-init:
        condition: service_completed_successfully
    networks:
      - genfity-wuzapi_wuzapi-network
    restart: on-failure

  # ==========================================
  # Nginx Reverse Proxy (prod only)
  # ==========================================
  nginx-proxy:
    profiles: ["prod"]
    image: nginxproxy/nginx-proxy:alpine
    container_name: genfity-event-nginx-proxy
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - nginx_certs:/etc/nginx/certs
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - genfity-wuzapi_wuzapi-network
    restart: unless-stopped
    labels:
      - "com.github.nginx-proxy.nginx=true"

  # ==========================================
  # Let's Encrypt ACME Companion (prod only)
  # ==========================================
  acme-companion:
    profiles: ["prod"]
    image: nginxproxy/acme-companion
    container_name: genfity-event-acme-companion
    depends_on:
      - nginx-proxy
    environment:
      - DEFAULT_EMAIL=${LETSENCRYPT_EMAIL:-}
      - NGINX_PROXY_CONTAINER=genfity-event-nginx-proxy
    volumes:
      - nginx_certs:/etc/nginx/certs
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - genfity-wuzapi_wuzapi-network
    restart: unless-stopped

networks:
  genfity-wuzapi_wuzapi-network:
    external: true

volumes:
  nginx_certs:
  nginx_vhost:
  nginx_html:

# ==========================================
# Usage:
#   Dev (app only - uses existing PostgreSQL):
#     1. Ensure genfity-wuzapi PostgreSQL is running on port 5432
#     2. Run: docker compose --profile dev up -d
#     3. Database will be auto-created if not exists
#     4. GORM will auto-migrate tables on app startup
#
#   Prod (app + nginx proxy + automatic SSL):
#     1. Set GENFITY_DOMAIN & LETSENCRYPT_EMAIL in .env
#     2. Run: docker compose --profile prod up -d
#     3. SSL certificates auto-created & renewed
# ==========================================
